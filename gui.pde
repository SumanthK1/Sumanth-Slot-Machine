/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:364637:
  appc.background(0);
} //_CODE_:window1:364637:

// Spin button
public void spinClicked(GButton source, GEvent event) { //_CODE_:spinner:295524:
  if(start){ 
    if(count>1300){
      spin=!spin;
      count=0;
      u1.winnings=0;
    }
  }
  
} //_CODE_:spinner:295524:

// 3 wallpapers selection
public void theme1Picked(GImageButton source, GEvent event) { //_CODE_:Theme1:812641:
  curSM=loadImage("wallpaper1.png");
} //_CODE_:Theme1:812641:

public void theme2Picked(GImageButton source, GEvent event) { //_CODE_:Theme2:739986:
  curSM=loadImage("wallpaper2.png");
} //_CODE_:Theme2:739986:

public void theme3Picked(GImageButton source, GEvent event) { //_CODE_:theme3:874531:
  curSM=loadImage("wallpaper3.png");
} //_CODE_:theme3:874531:

// Getting initial total value from slider
public void totalStart(GCustomSlider source, GEvent event) { //_CODE_:startTotal:255422:
  if(init==0){
    u1.total=int(startTotal.getValueF());
    
  }
} //_CODE_:startTotal:255422:

// Letting user be able to spin after confirming initial amount
public void startPressed(GButton source, GEvent event) { //_CODE_:starter:347684:
  start=true;
  
  if(start==true)
    starter.setText("AMOUNT SAVED");
  
  init++; // Init is not 0 anymore so user cannot change their initial total
} //_CODE_:starter:347684:

// Bet placed by user
public void betPlaced(GCustomSlider source, GEvent event) { //_CODE_:betPlacer:672486:
  if(!spin)
    u1.bet=betPlacer.getValueI();
} //_CODE_:betPlacer:672486:

// Set curSpeed with slider value x2 
public void setSpeed(GCustomSlider source, GEvent event) { //_CODE_:speedSetter:462332:
  curSpeed=speedSetter.getValueI()*2;
} //_CODE_:speedSetter:462332:

// Reset all values back to 0 and false
public void restartPressed(GButton source, GEvent event) { //_CODE_:restart:565833:
  start=false;
  count=0;
  spin=false;
  u1.bet=0;
  u1.winnings=0;
  u1.total=0;
  init=0;
  starter.setText("CONFIRM INITIAL AMOUNT");
} //_CODE_:restart:565833:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 500, 350, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  spinner = new GButton(window1, 129, 139, 127, 179);
  spinner.setText("SPIN");
  spinner.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  spinner.addEventHandler(this, "spinClicked");
  Theme1 = new GImageButton(window1, 13, 50, 100, 60, new String[] { "wallpaper1.png", "wallpaper1.png", "wallpaper1.png" } );
  Theme1.addEventHandler(this, "theme1Picked");
  Theme2 = new GImageButton(window1, 12, 148, 100, 60, new String[] { "wallpaper2.png", "wallpaper2.png", "wallpaper2.png" } );
  Theme2.addEventHandler(this, "theme2Picked");
  theme3 = new GImageButton(window1, 11, 252, 100, 60, new String[] { "wallpaper3.png", "wallpaper3.png", "wallpaper3.png" } );
  theme3.addEventHandler(this, "theme3Picked");
  label1 = new GLabel(window1, 14, 19, 100, 26);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Select a theme:");
  label1.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label1.setOpaque(true);
  startTotal = new GCustomSlider(window1, 127, 13, 193, 50, "red_yellow18px");
  startTotal.setShowLimits(true);
  startTotal.setLimits(0, 0, 10000);
  startTotal.setNbrTicks(999);
  startTotal.setNumberFormat(G4P.INTEGER, 0);
  startTotal.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  startTotal.setOpaque(false);
  startTotal.addEventHandler(this, "totalStart");
  starter = new GButton(window1, 339, 16, 100, 40);
  starter.setText("CONFIRM INITIAL AMOUNT");
  starter.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  starter.addEventHandler(this, "startPressed");
  betPlacer = new GCustomSlider(window1, 127, 87, 290, 50, "red_yellow18px");
  betPlacer.setShowLimits(true);
  betPlacer.setLimits(0, 0, 1000);
  betPlacer.setNbrTicks(25);
  betPlacer.setNumberFormat(G4P.INTEGER, 0);
  betPlacer.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  betPlacer.setOpaque(false);
  betPlacer.addEventHandler(this, "betPlaced");
  speedSetter = new GCustomSlider(window1, 265, 141, 161, 50, "red_yellow18px");
  speedSetter.setShowValue(true);
  speedSetter.setLimits(1, 1, 3);
  speedSetter.setNbrTicks(3);
  speedSetter.setStickToTicks(true);
  speedSetter.setShowTicks(true);
  speedSetter.setNumberFormat(G4P.INTEGER, 0);
  speedSetter.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  speedSetter.setOpaque(false);
  speedSetter.addEventHandler(this, "setSpeed");
  restart = new GButton(window1, 333, 232, 88, 79);
  restart.setText("RESTART");
  restart.setLocalColorScheme(GCScheme.RED_SCHEME);
  restart.addEventHandler(this, "restartPressed");
  label2 = new GLabel(window1, 183, 6, 80, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Initial Amount");
  label2.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  label2.setOpaque(false);
  label3 = new GLabel(window1, 229, 79, 80, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Bet Amount");
  label3.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  label3.setOpaque(false);
  label4 = new GLabel(window1, 296, 133, 90, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Set Spin Speed");
  label4.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  label4.setOpaque(false);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GButton spinner; 
GImageButton Theme1; 
GImageButton Theme2; 
GImageButton theme3; 
GLabel label1; 
GCustomSlider startTotal; 
GButton starter; 
GCustomSlider betPlacer; 
GCustomSlider speedSetter; 
GButton restart; 
GLabel label2; 
GLabel label3; 
GLabel label4; 
